name: tests
on:
  push:
    branches:
    - master
  pull_request:

  tags-ignore:
    - '**'
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-latest, macos-latest]
        include:
          # Upload coverage only on this combination.
          - go-version: 1.18.x
            os: ubuntu-latest
            upload-coverage: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-
      - name: Mod verify
        run: go mod verify
      - name: Run gofmt
        if: runner.os != 'Windows'
        run: '[ -z $(gofmt -s -l `find . -name "*.go" | grep -v vendor`) ] || (gofmt -s -d `find . -name "*.go" | grep -v vendor` && exit 1)'
      - name: Run go vet
        run: go vet ./...
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
      - name: Run go tests
        run: go test -v -race -covermode=atomic -coverprofile=coverage.out ./...
      - name: Upload test coverage to Coveralls
        if: ${{ matrix.upload-coverage }}
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          go install github.com/mattn/goveralls@latest
          goveralls -coverprofile=coverage.out -service=github
